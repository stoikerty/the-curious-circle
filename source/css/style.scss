// some compass and custom helpers for starting out
@import "_global-config.scss";

// Animations
// --
@include keyframes(robotBreathing) {
    0% {
        @include transform(scale(0.6));
    }
    50% {
        @include transform(scale(0.8));
    }
    100% {
        @include transform(scale(0.6));
    }
}

@include keyframes(pointerBreathing) {
    0% {
        @include transform(scale(0.4));
    }
    50% {
        @include transform(scale(0.6));
    }
    100% {
        @include transform(scale(0.4));
    }
}


// Variables
// --
$grid-size : 18px;
$world-size : $grid-size * 14;


// Styling
// --
.content{
    @include position(relative, block, 100%);
    float : left;
    text-align : center;
}

.inner-content{
    @include isAnimated;
    @include transform-origin(50%, 50%);
    @include position(relative, inline-block);
    padding : 0 5px;
}

.world-grid{
    z-index : 2;
    @include position(relative, inline-block, $world-size, $world-size);
    margin : $grid-size 0 0;
    vertical-align : top;

    background-color : #fff;
    @include box-shadow(
        0px 0px 3px rgba(#000, 0.08),
        0px 0px 30px rgba(#000, 0.05)
    );
    border : 1px solid #ddd;
    @include border-radius(2px);

    .grid-cells{
        .cell{
            z-index : 1;
            @include position(absolute, block, $grid-size, $grid-size);
            @include border-box;
            top  : $world-size - $grid-size;
            left : 0;

            &:before{
                @include position(absolute, block);
                @include border-box;
                margin  : 0;
                top  : 0;
                left : 0;
                max-width  : $grid-size * 5;
                max-height : $grid-size * 5;
                padding : 8px;

                content : 'LOST';
                color   : #fff;
                background-color : $orange-dark;

                @include opacity(0);
                @include transform(scale(2) translateX(-($grid-size / 2)) translateY(-4px));
                @include transition(
                    opacity   0.2s $ease-in-out-quint,
                    transform 1.2s $ease-in-out-quint,
                    color     0.9s $ease-in-out-quint,
                    background-color 1.2s $ease-in-out-quint,
                    max-width 1.2s $ease-in-out-quint,
                    max-height 1.2s $ease-in-out-quint
                );
            }

            &.is-active{
                &:before{
                    @include transform(scale(0.4) translateX(0px) translateY(0px));
                    @include opacity(0.4);
                    max-width  : $grid-size;
                    max-height : $grid-size;
                    color : transparent;
                    background-color : $orange-light;
                }
            }

            &.is-stepped-on{
                &:before{
                    @include transform(scale(2.6) rotate(200deg));
                    @include opacity(0.2);
                    @include transition(
                        opacity   0.2s $ease-in-out-quint,
                        transform 0.4s $ease-in-out-quint
                    );
                }
            }
        }
    }

    .robot{
        z-index : 2;
        @include position(relative, block, $grid-size, $grid-size);
        @include border-box;
        top  : $world-size - $grid-size;
        left : 0;
        @include transition(
            opacity   0.2s $ease-in-out-quint,
            transform 0.26s $ease-in-out-quint
        );

        &:before{
            z-index : 2;
            @include position(absolute, block, 100%, 100%);
            @include border-box;
            @include transform(scale(0.6));
            content : ' ';
            background-color : #444;
            @include border-radius(50px);
        }

        .pointer{
            z-index : 1;
            @include position(relative, block, $grid-size / 2, $grid-size / 2);
            @include border-box;
            @include transition(transform 0.26s $ease-in-out-quint);
            
            &:before{
                @include position(absolute, block, 100%, 100%);
                top  : ($grid-size / 2) * 0.4;
                left : ($grid-size / 2) * 0.4;
                @include transform(scale(0.6));
                content : ' ';
                background-color : #eee;
                @include border-radius(50px);
                border : 1px solid #666;
                @include transition(
                    transform 0.26s $ease-in-out-quint,
                    background-color 0.2s ease-in-out
                );
            }

            &.north{
                @include transform(translateY(-$grid-size) translateX(0));
            }

            &.east{
                @include transform(translateY(0) translateX($grid-size));
            }

            &.south{
                @include transform(translateY($grid-size) translateX(0));
            }

            &.west{
                @include transform(translateY(0) translateX(-$grid-size));
            }
        }

        &.is-dead{
            @include opacity(0);
            @include transition(
                opacity   0.2s $ease-in-out-quint,
                transform 0s none
            );
        }

        &.is-breathing{
            &:before{
                @include animation(
                    robotBreathing $ease-out-quint 5s infinite
                );
            } 
            .pointer:before{
                @include animation(
                    pointerBreathing $ease-in-out-quint 5s infinite
                );
            } 
        }

        &.is-moving{
            .pointer{
                @include transform(translateY(0) translateX(0));
                &:before{ background-color : #888; }
            } 
        }

        &.is-not-moving{
            .pointer:before{
                @include transform(scale(0.7));
                background-color : $red-light;
            } 
        }
    }
}

.command-input{
    z-index : 1;
    @include position(relative, inline-block, $world-size - ($grid-size * 2));
    margin : $grid-size ($grid-size) 0;
    vertical-align : top;

    $input-height : 26px;

    .current-input{
        z-index : 2;
        @include position(relative, block, 100%, $input-height);
        @include border-box;
        float : left;
        padding : 1px 8px 1px;

        background-color : #fff;
        @include box-shadow(
            0px 0px 3px rgba(#000, 0.08),
            0px 0px 30px rgba(#000, 0.05)
        );
        border : 1px solid #ccc;
        @include border-radius(2px);

        line-height : $input-height;
        letter-spacing : 0.06em;
        font-size : 1em;
        color : #999;

        &:focus{
            @include box-shadow(
                0px 0px 3px rgba(#000, 0.14),
                0px 0px 30px rgba(#000, 0.08)
            );
            border : 1px solid #aaa;
        }
    }

    .touch-keyboard{
        @include position(relative, block, 100%);
        float : left;
        padding : 6px 2px 0px;

        $button-height : $grid-size * 2;

        .button{
            z-index : 1;
            @include isButton;
            @include transform(scale(1));
            @include transition(transform 0.1s $ease-in-out-quint);
            color : #fff;
            line-height : $button-height;
            text-align  : center;
            font-weight : bold;

            &:after{
                z-index : -1;
                @include position(absolute, block, 100%, 100%);
                @include border-box;
                top  : 0;
                left : 0;
                content : ' ';
                background-color : #444;
                border-left  : 1px solid #ddd;
                border-right : 1px solid #aaa;
                border-bottom : 2px solid #999;
                @include transform(scale(0.92));
                @include transition(opacity 0.07s $ease-out-quint);
                @include border-radius(2px);
            }

            &:hover{
                &:after{ @include opacity(0.86); }
            }

            &:active{
                @include transform(scaleY(0.93) scaleX(0.96));
                &:after{ @include opacity(1); }
            }

            &.green-dark{
                &:after{
                    background-color : $green-dark;
                }
            }

            &.blue-dark{
                &:after{
                    background-color : $blue-dark;
                }
            }

            &.blue-light{
                &:after{
                    background-color : $blue-light;
                }
            }

            &.orange-dark{
                &:after{
                    background-color : $orange-dark;
                }
            }

            &.is-active{
                &:after{
                    background-color : $red-dark;
                    @include opacity(1);
                }
            }
        }

        .left{
            @include position(relative, block, 40%);
            float : left;
            @include border-box;
            padding : 3px;

            .instructions{
                @include position(relative, block, 100%);
                float : left;

                .forward, .left, .right{
                    @include position(relative, block, 33.333%);
                    float : left;
                    @include border-box;
                }

                .forward{
                    width : 100%;
                }
                .left, .right{
                    width : 50%;
                    line-height : $button-height * 1.6;
                }
            }

            .history{
                @include position(relative, block, 100%, $grid-size * 6);
                @include border-box;
                float : left;
                padding : 4px 6px 8px;
                margin-top : 6px;
                overflow-y : scroll;

                background-color : #f4f4f4;

                text-align : left;
                font-size : 0.8em;
                color : #888;

                @include border-radius(2px);
                @include box-shadow(
                    0px 0px 4px rgba(#fff, 1),
                    inset 0px 1px 1px rgba(#000, 0.08),
                    inset 0px 0px 4px rgba(#000, 0.1)
                );
            }
        }

        .right{
            @include position(relative, block, 60%);
            float : right;
            @include border-box;
            padding : 3px;

            .numpad{
                .position{
                    @include position(relative, block, 100%);
                    float : left;
                    padding-bottom : 5px;

                    .x, .y, .orientation{
                        @include position(relative, block, 100%);
                        float : left;
                        font-size : 0.7em;
                    }

                    .x, .y{
                        width : 50%;
                    }
                    .orientation{
                        width : 100%;
                        margin-top : 2px;
                    }
                }
                .numbers{
                    @include position(relative, block, 100%);
                    float : left;
                    .number{
                        @include position(relative, block, 33.333%);
                        float : left;
                        @include border-box;

                        @include transition(
                            opacity ease-in-out 0.18s,
                            transform ease-in-out 0.14s
                        );

                        &:before{
                            content : '\00a0 ';
                        }

                        &.nr0{
                            width : (33.333% * 2);
                        }
                    }
                }

                &.disabled-mode .numbers{
                    .number{
                        @include opacity(0.2);
                        @include transform(scale(0.7));
                        color : rgba(#fff, 0);
                    }
                }

                &.number-mode .numbers{
                    .number{
                        &:before{
                            content : attr(data-number);
                        }
                    }
                }

                &.orientation-mode .numbers{
                    .number{
                        &:before{
                            content : attr(data-orientation);
                        }

                        &.nr2, &.nr4, &.nr6, &.nr8{
                            font-size : 0.5em;
                        }

                        &.nr1, &.nr3, &.nr5, &.nr7, &.nr9, &.nr0{
                            @include opacity(0.2);
                            @include transform(scale(0.7));
                            color : rgba(#fff, 0);
                        }
                    }
                }
            }
        }
    }

    .history{
        z-index : 1;
        @include position(relative, block, 100%);
        float : left;

        .command{
            @include position(relative, block, 100%, $input-height);
            float : left;
            margin-top : 10px;

            background-color : #fff;
            border : 1px solid #eee;
            @include border-radius(2px);
        }

        .command + .command{
            border : 1px solid #fff;
        }
    }
}